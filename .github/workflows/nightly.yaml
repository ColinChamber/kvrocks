# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Nightly

on:
  push:
    branches: [test-push-img]
  pull_request:
    paths: [".github/workflows/nightly.yaml"]

jobs:
  build-redis-cli:
    name: build redis cli for ${{ matrix.arch }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Cache redis-cli
        id: cache-redis-cli
        uses: actions/cache@v3
        with:
          path: |
            ~/local/bin/redis-cli
          key: ubuntu-redis-cli-${{ matrix.arch }}
      - name: Install redis-cli
        if: steps.cache-redis-cli.outputs.cache-hit != 'true'
        run: |
          curl -O https://download.redis.io/releases/redis-6.2.7.tar.gz
          tar -xzvf redis-6.2.7.tar.gz
          mkdir -p $HOME/local/bin
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
            pushd redis-6.2.7 && make CC=aarch64-linux-gnu-gcc MALLOC=libc -j$NPROC redis-cli && mv src/redis-cli ${{ github.workspace }}/redis-cli-${{ matrix.arch }} && popd
          fi
          if [ "${{ matrix.arch }}" == "amd64" ]; then
            pushd redis-6.2.7 && BUILD_TLS=yes make -j$NPROC redis-cli && mv src/redis-cli ${{ github.workspace }}/redis-cli-${{ matrix.arch }} && popd
          fi
      - name: Print debug information
        run: |
          ls -l $HOME/local/bin/
          uname -m
          echo "$HOME"

      - name: Upload redis-cli artifact
        uses: actions/upload-artifact@v2
        with:
          name: redis-cli-${{ matrix.arch }}
          path: ${{ github.workspace }}/redis-cli-${{ matrix.arch }}

  publish-nightly-docker-image:
    needs: build-redis-cli
    name: Publish nightly Docker image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Make tools directory
        run: |
          mkdir tools
      - name: Download redis-cli-arm64 artifact
        uses: actions/download-artifact@v2
        with:
          name: redis-cli-arm64
          path: tools
      - name: Download redis-cli-amd64 artifact
        uses: actions/download-artifact@v2
        with:
          name: redis-cli-amd64
          path: tools
      - name: Login Docker Hub
        if: (github.event_name != 'pull_request')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: colinchamber/kvrocks-customize
          flavor: latest=false
          tags: |
            type=sha,prefix=nightly-{{date 'YYYYMMDD'}}-,format=short
            type=raw,value=nightly

      - uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TARGET_ARCH=${{ matrix.platform }}
